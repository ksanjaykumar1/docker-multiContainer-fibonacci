{"ast":null,"code":"var _jsxFileName = \"/home/sanjay/tutorial practice/docker-multiContainer/client/src/Fib.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Fib extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seenIndexes: [],\n      values: {},\n      index: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      await axios.post('/ap/values', {\n        index: this.state.index\n      });\n      this.setState({\n        index: ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchValues();\n    this.fetchIndexes();\n  }\n\n  async fetchValues() {\n    const values = await axios.get('/api/values/current');\n    this.setState({\n      values: values.data\n    });\n  } //list of indexes ever sumbmitted and stored in postgress\n\n\n  async fetchIndexes() {\n    const seenIndexes = await axios.get('/api/values/all');\n    this.setState({\n      seenIndexes: seenIndexes.data\n    });\n  }\n\n  // takes all the number and prints them out with comma\n  renderSeenIndexed() {\n    return this.state.seenIndexes.map(({\n      number\n    }) => number).join(', ');\n  }\n\n  renderValues() {\n    const entries = [];\n\n    for (let key in this.state.values) {\n      entries.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"For index \", key, \" I calculated \", this.state.values[key]]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter you index:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.index,\n          onChange: event => this.setState({\n            index: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Indexes I have seen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), this.renderSeenIndexed(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Calculated values:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), this.renderValues()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/sanjay/tutorial practice/docker-multiContainer/client/src/Fib.js"],"names":["React","Component","axios","Fib","state","seenIndexes","values","index","handleSubmit","event","preventDefault","post","setState","componentDidMount","fetchValues","fetchIndexes","get","data","renderSeenIndexed","map","number","join","renderValues","entries","key","push","render","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEvCG,KAFuC,GAEjC;AACFC,MAAAA,WAAW,EAAC,EADV;AAEFC,MAAAA,MAAM,EAAC,EAFL;AAGFC,MAAAA,KAAK,EAAC;AAHJ,KAFiC;;AAAA,SA0BvCC,YA1BuC,GA0BxB,MAAMC,KAAN,IAAc;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMR,KAAK,CAACS,IAAN,CAAW,YAAX,EAAwB;AAC1BJ,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AADQ,OAAxB,CAAN;AAGA,WAAKK,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAC;AAAP,OAAd;AAEH,KAjCsC;AAAA;;AAQvCM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,WAAL;AACA,SAAKC,YAAL;AACH;;AAEgB,QAAXD,WAAW,GAAE;AACf,UAAMR,MAAM,GAAG,MAAMJ,KAAK,CAACc,GAAN,CAAU,qBAAV,CAArB;AACA,SAAKJ,QAAL,CAAc;AAACN,MAAAA,MAAM,EAACA,MAAM,CAACW;AAAf,KAAd;AAEH,GAjBsC,CAkBvC;;;AACkB,QAAZF,YAAY,GAAE;AAChB,UAAMV,WAAW,GAAG,MAAMH,KAAK,CAACc,GAAN,CAAU,iBAAV,CAA1B;AACA,SAAKJ,QAAL,CAAc;AACVP,MAAAA,WAAW,EAACA,WAAW,CAACY;AADd,KAAd;AAGH;;AAWD;AACAC,EAAAA,iBAAiB,GAAG;AAChB,WAAO,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,GAAvB,CAA2B,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAYA,MAAvC,EAA+CC,IAA/C,CAAoD,IAApD,CAAP;AACH;;AAEDC,EAAAA,YAAY,GAAE;AAEV,UAAMC,OAAO,GAAE,EAAf;;AAEA,SAAI,IAAIC,GAAR,IAAe,KAAKpB,KAAL,CAAWE,MAA1B,EAAkC;AAC9BiB,MAAAA,OAAO,CAACE,IAAR,eACI;AAAA,iCACeD,GADf,oBACkC,KAAKpB,KAAL,CAAWE,MAAX,CAAkBkB,GAAlB,CADlC;AAAA,SAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAE,KAAKlB,YAArB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACA,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,KADlB;AAEA,UAAA,QAAQ,EAAEE,KAAK,IAAI,KAAKG,QAAL,CAAc;AAACL,YAAAA,KAAK,EAAEE,KAAK,CAACkB,MAAN,CAAaC;AAArB,WAAd;AAFnB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,EAWK,KAAKV,iBAAL,EAXL,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,EAcK,KAAKI,YAAL,EAdL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AAzEsC","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\nexport default class Fib extends Component {\n\n    state={\n        seenIndexes:[],\n        values:{},\n        index:''\n\n    };\n    componentDidMount(){\n        this.fetchValues();\n        this.fetchIndexes();\n    }\n\n    async fetchValues(){\n        const values = await axios.get('/api/values/current')\n        this.setState({values:values.data})\n        \n    }\n    //list of indexes ever sumbmitted and stored in postgress\n    async fetchIndexes(){\n        const seenIndexes = await axios.get('/api/values/all')\n        this.setState({\n            seenIndexes:seenIndexes.data\n        })\n    }\n\n    handleSubmit = async(event)=>{\n        event.preventDefault();\n        await axios.post('/ap/values',{\n            index: this.state.index\n        })\n        this.setState({index:''});\n\n    }\n\n    // takes all the number and prints them out with comma\n    renderSeenIndexed() {\n        return this.state.seenIndexes.map(({number})=>number).join(', ')\n    }\n\n    renderValues(){\n\n        const entries =[];\n\n        for(let key in this.state.values) {\n            entries.push(\n                <div key={key}>\n                    For index {key} I calculated {this.state.values[key]}\n                </div>\n            )\n        }\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Enter you index:</label>\n                    <input \n                    value={this.state.index}\n                    onChange={event => this.setState({index: event.target.value})}\n                    />\n                    <button>Submit</button>\n                </form>\n\n                <h3>Indexes I have seen:</h3>\n                {this.renderSeenIndexed()}\n\n                <h3>Calculated values:</h3>\n                {this.renderValues()}\n\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}